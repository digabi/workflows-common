name: 'Queue Integration Tests'

on:
  workflow_call:
    inputs:
      image_tag_latest:
        description: 'Docker image tag (branch_latest) that was build in previous step'
        required: true
        type: string
      test_yo:
        description: 'True if yo tests should be run'
        required: false
        type: boolean
      test_abitti:
        description: 'True if Abitti tests should be run'
        required: false
        type: boolean
      cross_repo_access_app_id:
        description: 'GitHub App ID for integration tests'
        required: true
        type: string
    secrets:
      CROSS_REPO_ACCESS_APP_PRIVATE_KEY:
        description: 'private key for cross-repo access app' 
        required: true
jobs:
  create-app-token:
    runs-on: ubuntu-latest
    outputs:
      app-token: ${{ steps.app-token.outputs.token }}
    steps:
      - uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ inputs.cross_repo_access_app_id }}
          private-key: ${{ secrets.CROSS_REPO_ACCESS_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

  debug:
    name: Debug
    needs: create-app-token
    runs-on: ubuntu-latest
    steps:
      - name: Print debug information
        run: |
          echo "App Token: ${{ needs.create-app-token.outputs.app-token }}"
          echo "Image Tag Latest: ${{ inputs.image_tag_latest }}"
          echo "Test Yo: ${{ inputs.test_yo }}"
          echo "Test Abitti: ${{ inputs.test_abitti }}"

  queue-abitti-tests:
    name: Queue Abitti tests
    needs: create-app-token
    if: ${{ inputs.test_abitti }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      statuses: write
    steps:
      - name: Queue abitti tests
        uses: digabi/workflows-common/actions/queue-test-run@docker-integration-tests
        with:
          image_tag_latest: ${{ inputs.image_tag_latest }}
          test_workflow_file: abitti-playwright-tests.yml
          test_status_name: integration-tests/abitti
          cross_repo_access_token: ${{ needs.create-app-token.outputs.app-token }}

  queue-yo-tests:
    name: Queue Yo tests
    needs: create-app-token
    if: ${{ inputs.test_yo }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      statuses: write
    steps:
      - name: Queue yo tests
        uses: digabi/workflows-common/actions/queue-test-run@docker-integration-tests
        with:
          image_tag_latest: ${{ inputs.image_tag_latest }}
          test_workflow_file: yo-playwright-tests.yml
          test_status_name: integration-tests/yo
          cross_repo_access_token: ${{ needs.create-app-token.outputs.app-token }}
