name: 'Docker Build&Push'

on:
  workflow_call:
    inputs:
      image-name:
        description: 'Name of the Docker image'
        required: true
        type: string
      docker-target:
        description: 'Target stage for the Docker build (e.g., production, staging) need '
        required: false
        type: string
      no-npm:
        description: 'set to true to skip node setup if unecessary'
        required: false
        type: boolean
        default: false
      dockerfile:
        description: 'Path to the Dockerfile'
        required: false
        type: string
        default: '.'
    secrets:
      NPM_TOKEN:
        description: 'NPM authentication token for private packages'
        required: true
      AWS_ACCOUNT_ID:
        description: 'AWS Account ID for ECR access'
        required: true

jobs:
  docker-build:
    name: Docker build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        if: ${{ !inputs.no-npm }}
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - name: Assume AWS role
        uses: digabi/workflows-common/actions/assume-digabi-aws-role@main
        with:
          aws-account-id: ${{ secrets.AWS_ACCOUNT_ID }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Set custom git info in env variables
        id: vars
        # github.sha is not the latest commit sha in pull_request event so we need to get it from the event payload
        run: |
          calculatedSha=$(git rev-parse --short  ${{ github.event_name == 'pull_request' && format('{0}',github.event.pull_request.head.sha) || format('{0}',github.sha)  }})
          echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV
          branchName="${{ github.head_ref || github.ref_name }}"
          echo "BRANCH_NAME=${branchName//\//-}" >> $GITHUB_ENV
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.dockerfile }}
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.image-name }}:${{env.BRANCH_NAME}}_build-${{ github.run_number }}.${{github.run_attempt}}_${{ env.COMMIT_SHORT_SHA }}
          provenance: false
          target: ${{ inputs.docker-target }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          secrets: |
            npmrc=//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}